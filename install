#!/bin/bash
#
# Creates defaults directories setup in directories.env; copies or links
# configuration files into place as appropriate.
#
# This needs to be run once.
#

fetch_repos() {
    if [ ! -e /usr/local/bin/pip ]; then
        sudo apt-get install curl python-pip python-dev build-essential
        sudo pip install --upgrade pip
        sudo pip install --upgrade virtualenv
        sudo pip install --upgrade virtualenvwrapper
    fi

    if [ ! -d ~/repos/pidcat ]; then
        git clone https://github.com/JakeWharton/pidcat.git ~/repos/pidcat
        estatus "Cloned pidcat"
    fi

    if [ ! -d ~/repos/gruf ]; then
        git clone https://github.com/svrana/gruf.git ~/repos/gruf
        estatus "Cloned gruf"
    fi

    if [ ! -d ~/repos/solarize ]; then
        git clone https://github.com/gmodarelli/solarize.git ~/repos/solarize
        ~/repos/solarize/solarize.sh dark
        estatus "Cloned solarize repo"
    fi

    if [ ! -d ~/.vim/bundle/Vundle.vim ]; then
        git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
        estatus "Cloned Vundle"
    fi
   
    vim +PluginInstall +qall
}

powerline_install() {
    if [ ! -f ~/.local/bin/powerline ]; then
        pip install --user git+git://github.com/Lokaltog/powerline
    fi
}

current_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# Setup defaults required by these dotfiles
. ${current_dir}/config.env

mkdir -p $BIN_DIR
mkdir -p $MY_TMP
mkdir -p ~/.bak
mkdir -p ~/.config/fontconfig/conf.d
mkdir -p ~/.fonts
mkdir -p ~/.vim/swp
mkdir -p ~/.vim/bundle
mkdir -p ~/.vim/autoload
mkdir -p ~/.kitchen

if [ "${HOME}" != "/root" ]; then
    mkdir -p ~/apps
    mkdir -p ~/repos

    mkdir -p $DOWNLOADS

    ln -Tsf $DROPBOX_ROOT/Documents $DOCUMENTS
    ln -Tsf $DROPBOX_ROOT/Music $MUSIC
    ln -Tsf $DROPBOX_ROOT/Pictures $PHOTOS
fi

egood "Created default directories as specified in $current_dir/directories.env"

ln -sf ${RC_DIR}/bash_profile 	    ~/.bash_profile
ln -sf ${RC_DIR}/bashrc             ~/.bashrc
ln -sf ${RC_DIR}/vimrc              ~/.vimrc
ln -sf ${RC_DIR}/tmux.conf 	    ~/.tmux.conf
ln -sf ${RC_DIR}/gitconfig          ~/.gitconfig
ln -sf ${RC_DIR}/rvmrc              ~/.rvmrc
ln -sf ${RC_DIR}/ackrc              ~/.ackrc
ln -sf ${RC_DIR}/psqlrc             ~/.psqlrc
ln -sf ${RC_DIR}/10-powerline-symbols.conf      ~/.config/fontconfig/conf.d/10-powerline-symbols.conf
ln -sf ${RC_DIR}/kitchen-config.yml ~/.kitchen/config.yml

ln -sf ${CONFIG_DIR}/misc/dircolors.ansi-dark   ~/.dircolors
ln -sf ${CONFIG_DIR}/misc/PowerlineSymbols.otf  ~/.fonts/PowerlineSymbols.otf
ln -sf ~/repos/pidcat/pidcat.py ${BIN_DIR}/pidcat

egood "Created home directory file links"

fc-cache -vf ~/.fonts > /dev/null 2>&1
estatus "Built font cache for powerline"

for i in $(ls -1 $SCRIPT_DIR)
do
    chmod +x ${SCRIPT_DIR}/$i
done
egood "Added execute permission to scripts in $SCRIPT_DIR"

for i in $(ls -1 $SCRIPT_DIR)
do
    ln -sf ${SCRIPT_DIR}/$i ${BIN_DIR}/$i
done
egood "Created links in ${BIN_DIR} to scripts in $SCRIPT_DIR"

if [ "${HOME}" != "/root" ]; then
    fetch_repos
    powerline_install
fi

source ~/.bashrc
