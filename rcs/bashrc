# Loaded for each terminal and sourced at login by .bash_profile.
#
# vi:ft=sh

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh /usr/bin/lesspipe)"

# Enable programmable completion features (you don't need to enable this, if
# it's already enabled in /etc/bash.bashrc and /etc/profile sources
# /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

set -o vi                         # Run bash with vi keys instead of emacs
shopt -s checkwinsize
shopt -s histappend
shopt -s cdspell                  # Let bash help you change directories when you can't spell

export HISTCONTROL=ignoredups
export HISTSIZE=100000
export PROMPT_COMMAND='history -a'
export LS_DFLT_ARGS="--color=auto"
export EDITOR=vim
export LESS=mqeisz-2XR 		            # -R is important for escape sequences
export TERM=xterm-256color                  # this is for solarized
export PYTHONDONTWRITEBYTECODE=1            # stop littering
export FZF_DEFAULT_COMMAND='ag -l -g ""'     # ag for showing only interesting files
#export FZF_CTRL_T_COMAMAND=$FZF_DEFAULT_COMMAND

# Add potentially box specific directories in default.env
export PATH=\
/usr/local/bin:\
/usr/local/sbin:\
/usr/bin:\
/usr/sbin:\
/bin:\
/sbin:\
~/.local/bin

#
# Source the configuration for these dotfiles of which this file is a part.
#
# This assumes the install script has been run and .bashrc is a link pointing
# into the dotfiles repo.
#
bashrc_location=$(readlink -f ~/.bashrc)
dotfiles_dir=${bashrc_location%/rcs/bashrc}
. "$dotfiles_dir/config.env"

# Setup Gruf to aid working on multiple projects simultaneously
# http://github.com/svrana/gruf
if [ -d ~/repos/gruf ]; then
    source ~/repos/gruf/gruf.rc
fi

# pretty ls colors
eval "$(dircolors ~/.dircolors)"

# Powerline setup (I like it pretty)
#
# Include powerline in path, it's installed via pip
powerline_bash=~/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh
if [ -f $powerline_bash ]; then
    if [ -f "$(which powerline-daemon)" ]; then
        powerline-daemon -q
        export POWERLINE_BASH_CONTINUATION=1
        export POWERLINE_BASH_SELECT=1
        . $powerline_bash
    fi
fi

# rvm required config
export rvmsudo_secure_path=1
[[ -s "$RVM_PATH/scripts/rvm" ]] && . "$RVM_PATH/scripts/rvm"


# Make virtualenvwrapper use the .venv file to find the current
# python virtual environment. (Stolen from the virtualenvwrapper
# plugin for oh-my-zsh)
function prompt() {
    if [[ -z "$WORKON_CWD" ]]; then
      local WORKON_CWD=1
      # Get project path, ending at gitrepo, root or directory with .venv
      local PROJECT_ROOT=$PWD

      # not going to have a .venv in HOME and don't bother or above it
      while [[ "$PROJECT_ROOT" != "$HOME" &&
               "$PROJECT_ROOT" != "/" &&
               "$PROJECT_ROOT" != "" &&
               ! -e "$PROJECT_ROOT/.venv" &&
               ! -d "$PROJECT_ROOT/.git" ]]; do
        PROJECT_ROOT=${PROJECT_ROOT%/*}
      done
      #echo "PROJECT_ROOT: ${PROJECT_ROOT}"

      if [[ -f "$PROJECT_ROOT/.venv" ]]; then
        ENV_NAME="$(cat "$PROJECT_ROOT/.venv")"
      else
        ENV_NAME=""
      fi

      if [[ "$ENV_NAME" != "" ]]; then
        # Activate the environment only if it is not already active
        if [[ "$VIRTUAL_ENV" != "$WORKON_HOME/$ENV_NAME" ]]; then
          if [[ -e "$WORKON_HOME/$ENV_NAME/bin/activate" ]]; then
            #echo "Activating virtualenv $ENV_NAME"
            workon "$ENV_NAME" && export CD_VIRTUAL_ENV="$ENV_NAME"
          fi
        fi
      elif [[ -n $CD_VIRTUAL_ENV && -n $VIRTUAL_ENV ]]; then
        #echo "deactivating"
        # We've just left the repo, deactivate the environment
        # Note: this only happens if the virtualenv was activated automatically
        deactivate && unset CD_VIRTUAL_ENV
      fi
    fi
}

OLD_PC=$PROMPT_COMMAND # hack to keep powerline working
PROMPT_COMMAND='prompt ; $OLD_PC'

export DIRENV_LOG_FORMAT=
eval "$(direnv hook bash)"
